(()=>{"use strict";function t(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);e&&(o=o.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,o)}return r}function e(e){for(var o=1;o<arguments.length;o++){var n=null!=arguments[o]?arguments[o]:{};o%2?t(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):t(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function r(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}console.log("QT-XT API: setup apiFetch"),wp.apiFetch.use((function(t,r){if(!t.path||"PUT"!==t.method&&"POST"!==t.method)return r(t);var o=wp.data.select("core/editor").getCurrentPost();if(!o.hasOwnProperty("type"))return r(t);var n=wp.data.select("core").getPostType(o.type);if(!n.hasOwnProperty("rest_base"))return r(t);var i="/wp/v2/"+n.rest_base+"/"+o.id;if(t.path.startsWith(i)&&"PUT"===t.method||t.path.startsWith(i+"/autosaves")&&"POST"===t.method){if(!o.hasOwnProperty("qtx_editor_lang"))return console.log("QT-XT API: missing field [qtx_editor_lang] in post id="+o.id),r(t);var a=e(e({},t),{},{data:e(e({},t.data),{},{qtx_editor_lang:o.qtx_editor_lang})});return console.log("QT-XT API: using options=",t),r(a)}return r(t)}))})();